#!/usr/bin/env node
'use strict';
require('babel/register');
let to = require('to-case');
let path = require('path');
let fs = require('fs');
let argv = require('minimist')(process.argv.slice(2));

let model = to.lower(argv.m);
let properties = argv._;

let modelDir = './models/';
let schemaDir =  path.join(modelDir, 'schemas');
let modelName = to.capital(model) +'Model';

let schema = {
	id: modelName,
	type: 'object',
	properties: {}
};
for (var i = 0; i < properties.length; i++) {
	var prop = properties[i].split(':');
	schema.properties[prop[0]] = { type: prop[1]};
}
let stringSchema = JSON.stringify(schema);

let schemaToWrite = require('vkbeautify').json(stringSchema);
fs.writeFileSync(path.join(schemaDir,model + '.json'), schemaToWrite);

let modelJS = `'use strict';

import ModelBase from './model-base';
import schema from './schemas/${model}.json';

export default class ${modelName} extends ModelBase {
	constructor(props) {
        super(props, schema);
    }
}`;


fs.writeFileSync(path.join(modelDir, model + '.js'), modelJS);


